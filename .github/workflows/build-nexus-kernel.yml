name: Nexus kernel for alioth

on:
  workflow_dispatch

jobs:
  TwilightForAlioth:
    runs-on: ubuntu-latest
    steps:
      - name: Installing Dependencies
        run: |
          sudo apt update -y
          sudo apt-get install -y zip flex bison libncurses-dev gawk glibc-source libiberty-dev autoconf kmod bc build-essential gcc libc6 curl libstdc++6 git wget libssl-dev cpio p7zip-full curl zstd
          sudo apt clean
          echo "BUILD_TIME=$(TZ=Asia/Shanghai date +%F)" >> $GITHUB_ENV

      - name: Cloning Sources and Toolchain
        run: |
          git clone https://github.com/haiyan1301/nexus_kernel_xiaomi_sm8250.git --depth=1 -b sched-7 --recurse-submodules nexus_kernel_xiaomi_sm8250
          git clone https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 -b lineage-19.1 --depth=1 --single-branch --no-tags ~/aarch64-linux-android-4.9
          git clone https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 -b lineage-19.1 --depth=1 --single-branch --no-tags ~/arm-linux-androideabi-4.9
          git clone https://github.com/Tkiliay/AnyKernel3.git -b alioth
          mkdir -p ~/downloads
         
          
      - name: Wait for download to complete
        run: |
          # 设置下载文件的路径
          curl -o ~/downloads/neutron-clang-05012024.tar.zst  https://github.com/Neutron-Toolchains/clang-build-catalogue/releases/download/05012024/neutron-clang-05012024.tar.zst
          download_path=~/downloads/neutron-clang-05012024.tar.zst
          # 获取文件的初始大小
          initial_size=$(wc -c < "$download_path")
          # 循环检查文件大小，直到文件大小不再增加，即下载完成
          while true; do
            sleep 10  # 每10秒检查一次
            current_size=$(wc -c < "$download_path")
            if [ $current_size -eq $initial_size ]; then
              echo "Download completed"
              break
            fi
            initial_size=$current_size
          done

      - name: Extract file
        run: |
          zstd -d ~/downloads/neutron-clang-05012024.tar.zst
          tar -xf ~/downloads/neutron-clang-05012024.tar -C ~/clang

      - name: Add Ksu
        run: |
          cd nexus_kernel_xiaomi_sm8250
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -

      - name: Compiling Kernel
        run: |
          CLANG=~/clang/bin
          GCC32=~/arm-linux-androideabi-4.9/bin
          GCC64=~/aarch64-linux-android-4.9/bin
          PATH=$CLANG:$GCC64:$GCC32:$PATH
          export PATH
          export ARCH=arm64
          export CLANG_TRIPLE=aarch64-linux-gnu
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          export KBUILD_BUILD_VERSION=1
          export KBUILD_BUILD_TIMESTAMP="2022-01"
          export KBUILD_BUILD_USER=BUILDER
          export KBUILD_BUILD_HOST="-haiyan"
          output_dir=out
          pushd nexus_kernel_xiaomi_sm8250
          make O="$output_dir" \
                      alioth_deconfig \
                      vendor/kona-perf_defconfig \
                      vendor/xiaomi/alioth.config


          make -j $(nproc) \
                       O="$output_dir" \
                       CC=clang
          popd

      - name: Packaging the Kernel (KSU)
        run: |
          cp -v nexus_kernel_xiaomi_sm8250/out/arch/arm64/boot/Image \
                     AnyKernel3/
          pushd AnyKernel3
          7z a -mx9 ../Twilight-V2_KernelSU-CI-${{ env.BUILD_TIME }}-alioth-AOSP.zip *
          popd

      - name: Creating Config Info
        run: |
          echo "Device: Redmi K40
          Code: Alioth
          Build Code: ${{ github.run_number }}
          Twilight Kernel with KernelSU For Redmi K40" >> INFO.txt

      - name: Uploading Kernel Package to GH-Release
        uses: ncipollo/release-action@v1.8.6
        with:
          artifacts: Twilight-V2_KernelSU-CI-${{ env.BUILD_TIME }}-alioth-AOSP.zip
          name: "Twilight-V2_KernelSU-CI-${{ env.BUILD_TIME }}-alioth-AOSP"
          tag: " ${{ env.BUILD_TIME }}_Alioth_kernelsu-CI_${{ github.run_number }}"
          bodyFile: "INFO.txt"
